{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { memo, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Background from \"../../components/Background\";\nimport Logo from \"../../components/Logo\";\nimport Header from \"../../components/Header\";\nimport Button from \"../../components/Button\";\nimport TextInput from \"../../components/TextInput\";\nimport BackButton from \"../../components/BackButton\";\nimport { theme } from \"../../core/theme\";\nimport { emailValidator, passwordValidator, nameValidator } from \"../../core/utils\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar RegisterScreen = function RegisterScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState({\n    value: '',\n    error: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      firstname = _useState2[0],\n      setFirstname = _useState2[1];\n\n  var _useState3 = useState({\n    value: '',\n    error: ''\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      lastname = _useState4[0],\n      setLastname = _useState4[1];\n\n  var _useState5 = useState({\n    value: '',\n    error: ''\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      email = _useState6[0],\n      setEmail = _useState6[1];\n\n  var _useState7 = useState({\n    value: '',\n    error: ''\n  }),\n      _useState8 = _slicedToArray(_useState7, 2),\n      password = _useState8[0],\n      setPassword = _useState8[1];\n\n  var _onSignUpPressed = function _onSignUpPressed() {\n    var nameError = nameValidator(firstname.value);\n    var emailError = emailValidator(email.value);\n    var passwordError = passwordValidator(password.value);\n\n    if (emailError || passwordError || nameError) {\n      setEmail(_objectSpread(_objectSpread({}, email), {}, {\n        error: emailError\n      }));\n      setPassword(_objectSpread(_objectSpread({}, password), {}, {\n        error: passwordError\n      }));\n      return;\n    }\n\n    navigation.navigate('Start');\n  };\n\n  return _jsxs(Background, {\n    children: [_jsx(BackButton, {\n      goBack: function goBack() {\n        return navigation.navigate('HomeScreen');\n      }\n    }), _jsx(Logo, {}), _jsx(Header, {\n      children: \"Create Account\"\n    }), _jsx(TextInput, {\n      label: \"Firstname\",\n      returnKeyType: \"next\",\n      value: firstname.value,\n      onChangeText: function onChangeText(text) {\n        return setFirstname({\n          value: text,\n          error: ''\n        });\n      },\n      error: !!lastname.error,\n      errorText: lastname.error\n    }), _jsx(TextInput, {\n      label: \"Lastname\",\n      returnKeyType: \"next\",\n      value: lastname.value,\n      onChangeText: function onChangeText(text) {\n        return setLastname({\n          value: text,\n          error: ''\n        });\n      },\n      error: !!lastname.error,\n      errorText: lastname.error\n    }), _jsx(TextInput, {\n      label: \"Email\",\n      returnKeyType: \"next\",\n      value: email.value,\n      onChangeText: function onChangeText(text) {\n        return setEmail({\n          value: text,\n          error: ''\n        });\n      },\n      error: !!email.error,\n      errorText: email.error,\n      autoCapitalize: \"none\",\n      textContentType: \"emailAddress\",\n      keyboardType: \"email-address\"\n    }), _jsx(TextInput, {\n      label: \"Password\",\n      returnKeyType: \"done\",\n      value: password.value,\n      onChangeText: function onChangeText(text) {\n        return setPassword({\n          value: text,\n          error: ''\n        });\n      },\n      error: !!password.error,\n      errorText: password.error,\n      secureTextEntry: true\n    }), _jsx(Button, {\n      mode: \"contained\",\n      onPress: _onSignUpPressed,\n      style: styles.button,\n      children: \"Sign Up\"\n    }), _jsxs(View, {\n      style: styles.row,\n      children: [_jsx(Text, {\n        style: styles.label,\n        children: \"Already have an account? \"\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate('LoginScreen');\n        },\n        children: _jsx(Text, {\n          style: styles.link,\n          children: \"Login\"\n        })\n      })]\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  label: {\n    color: theme.colors.secondary\n  },\n  button: {\n    marginTop: 24\n  },\n  row: {\n    flexDirection: 'row',\n    marginTop: 4\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.primary\n  }\n});\nexport default memo(RegisterScreen);","map":{"version":3,"names":["React","memo","useState","Background","Logo","Header","Button","TextInput","BackButton","theme","emailValidator","passwordValidator","nameValidator","RegisterScreen","navigation","value","error","firstname","setFirstname","lastname","setLastname","email","setEmail","password","setPassword","_onSignUpPressed","nameError","emailError","passwordError","navigate","text","styles","button","row","label","link","StyleSheet","create","color","colors","secondary","marginTop","flexDirection","fontWeight","primary"],"sources":["/Users/hemesky/BioFi-1/src/screens/Auth/RegisterScreen.tsx"],"sourcesContent":["import React, { memo, useState } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity } from 'react-native';\nimport Background from '../../components/Background';\nimport Logo from '../../components/Logo';\nimport Header from '../../components/Header';\nimport Button from '../../components/Button';\nimport TextInput from '../../components/TextInput';\nimport BackButton from '../../components/BackButton';\nimport { theme } from '../../core/theme';\nimport { Navigation } from '../../types';\nimport {\n  emailValidator,\n  passwordValidator,\n  nameValidator,\n} from '../../core/utils';\n\ntype Props = {\n  navigation: Navigation;\n};\n\nconst RegisterScreen = ({ navigation }: Props) => {\n  const [firstname, setFirstname] = useState({ value: '', error: '' })\n  const [lastname, setLastname] = useState({ value: '', error: '' })\n  const [email, setEmail] = useState({ value: '', error: '' })\n  const [password, setPassword] = useState({ value: '', error: '' })\n\n  const _onSignUpPressed = () => {\n    const nameError = nameValidator(firstname.value)\n    const emailError = emailValidator(email.value)\n    const passwordError = passwordValidator(password.value)\n    if (emailError || passwordError || nameError) {\n      setEmail({ ...email, error: emailError })\n      setPassword({ ...password, error: passwordError })\n      return\n    }\n/* \n    AuthService.register(\n      firstname.value + \".\" + lastname.value,\n      firstname.value,\n      lastname.value,\n      email.value,\n      password.value\n    ).then(\n      response => {\n        console.log(response)\n      },\n      error => {\n        const resMessage =\n          (error.response &&\n            error.response.data &&\n            error.response.data.message) ||\n          error.message ||\n          error.toString();\n        console.log(resMessage)\n      }\n    ); */\n    navigation.navigate('Start');\n  };\n\n  return (\n    <Background>\n      <BackButton goBack={() => navigation.navigate('HomeScreen')} />\n\n      <Logo />\n\n      <Header>Create Account</Header>\n\n      <TextInput\n        label=\"Firstname\"\n        returnKeyType=\"next\"\n        value={firstname.value}\n        onChangeText={(text) => setFirstname({ value: text, error: '' })}\n        error={!!lastname.error}\n        errorText={lastname.error}\n      />\n      \n      <TextInput\n        label=\"Lastname\"\n        returnKeyType=\"next\"\n        value={lastname.value}\n        onChangeText={(text) => setLastname({ value: text, error: '' })}\n        error={!!lastname.error}\n        errorText={lastname.error}\n      />\n\n      <TextInput\n        label=\"Email\"\n        returnKeyType=\"next\"\n        value={email.value}\n        onChangeText={text => setEmail({ value: text, error: '' })}\n        error={!!email.error}\n        errorText={email.error}\n        autoCapitalize=\"none\"\n        textContentType=\"emailAddress\"\n        keyboardType=\"email-address\"\n      />\n\n      <TextInput\n        label=\"Password\"\n        returnKeyType=\"done\"\n        value={password.value}\n        onChangeText={text => setPassword({ value: text, error: '' })}\n        error={!!password.error}\n        errorText={password.error}\n        secureTextEntry\n      />\n\n      <Button mode=\"contained\" onPress={_onSignUpPressed} style={styles.button}>\n        Sign Up\n      </Button>\n\n      <View style={styles.row}>\n        <Text style={styles.label}>Already have an account? </Text>\n        <TouchableOpacity onPress={() => navigation.navigate('LoginScreen')}>\n          <Text style={styles.link}>Login</Text>\n        </TouchableOpacity>\n      </View>\n    </Background>\n  );\n};\n\nconst styles = StyleSheet.create({\n  label: {\n    color: theme.colors.secondary,\n  },\n  button: {\n    marginTop: 24,\n  },\n  row: {\n    flexDirection: 'row',\n    marginTop: 4,\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.primary,\n  },\n});\n\nexport default memo(RegisterScreen);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}